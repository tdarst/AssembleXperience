# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# asdf

name: Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r Code/requirements.txt
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python Code/runUnitTests.py

  build:
    needs: [test]
    permissions: write-all
    runs-on: windows-latest
    steps:

    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        architecture: "x64"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r Code/requirements.txt
        python -m pip install pyinstaller==5.13.2

    - name: Compile Using PyInstaller
      run: |
        python -m PyInstaller --onefile --name AssembleXperience Code/runSimulator.py

    - name: UploadBinaries
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: dist\
        if-no-files-found: error

  save-binary:
    needs: [build]
    permissions: write-all
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Binaries
        uses: actions/download-artifact@v3
        with:
          name: my-artifact
          path: dist\

      - name: Stage
        working-directory: ${{ github.workspace }}
        run: |
          copy dist\AssembleXperience.exe

      - name: Set Git Email
        run: git config --global user.email "trevordarst@gmail.com"

      - name: Set Git Name
        run: git config --global user.name "trevordarst"

      - name: Add File
        run: git add dist\AssembleXperience.exe

      - name: Commit File
        run: git commit -m "generated"

      - name: Push File
        run: git push